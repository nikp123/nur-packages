diff --git a/netsed.c b/netsed.c
index e51b81f..abfa2a3 100644
--- a/netsed.c
+++ b/netsed.c
@@ -537,7 +537,6 @@ void parse_params(int argc,char* argv[]) {
   // parse rules
   for (i=optind;i<argc;i++) {
     char *fs=0, *ts=0, *cs=0;
-    printf("[*] Parsing rule %s...\n",argv[i]);
     fs=strchr(argv[i],'/');
     if (!fs) error("missing first '/' in rule");
     fs++;
@@ -559,12 +558,8 @@ void parse_params(int argc,char* argv[]) {
       rule_live[rules]=atoi(cs); else rule_live[rules]=-1;
     shrink_to_binary(&rule[rules]);
     DBG("[*] Direction %d, %d wildcard%s\n", rule[rules].dir, rule[rules].fps, (rule[rules].fps > 1) ? "s" : "");
-    // printf("DEBUG: (%s) (%s)\n",rule[rules].from,rule[rules].to);
     rules++;
   }
-
-  printf("[+] Loaded %d rule%s...\n", rules, (rules > 1) ? "s" : "");
-
 }
 
 /// Bind and optionally listen to a socket for netsed server port.
@@ -595,9 +590,6 @@ void bind_and_listen(int af, int tcp, const char *portstr) {
     //fcntl(lsock,F_SETFL,O_NONBLOCK);
     /* Make our best to decide on dual-stacked listener. */
     one = (family == AF_UNSPEC) ? 0 /* All families */ : 1; /* Preconditioned addr */
-    if (res->ai_family == AF_INET6)
-      if (setsockopt(lsock, IPPROTO_IPV6, IPV6_V6ONLY, &one, sizeof(one)))
-        printf("    Failed to unset IPV6_V6ONLY: %s.\n", strerror(errno));
     if (bind(lsock, res->ai_addr, res->ai_addrlen) < 0) {
       ERR("bind(): %s", strerror(errno));
       close(lsock);
@@ -649,9 +641,7 @@ int sed_the_buffer(int siz, int* live, int dir) {
           if (k == (crule->fps - 1)) {
             changes++;
             gotchange=1;
-            printf("    Applying rule s/%s/%s...\n", crule->forig, crule->torig);
             live[j]--;
-            if (live[j] == 0) printf("    (rule just expired)\n");
             memcpy(&b2[newsize], crule->to, crule->ts);
             newsize += crule->ts;
             i = idx + crule->fs[k];
@@ -681,9 +671,6 @@ int sed_the_buffer(int siz, int* live, int dir) {
     }
   }
 
-  if (!changes) printf("[*] Forwarding untouched packet of size %d.\n",siz);
-  else printf("[*] Done %d replacements, forwarding packet of size %d (orig %d).\n",
-              changes,newsize,siz);
   return newsize;
 }
 
@@ -709,7 +696,6 @@ void server2client_sed(struct tracker_s * conn) {
       conn->state = DISCONNECTED;
     }
     if (rd>0) {
-      printf("[+] Caught server -> client packet.\n");
       rd=sed_the_buffer(rd, conn->live, IN);
       conn->time = now;
       conn->state = ESTABLISHED;
@@ -743,7 +729,6 @@ void client2server_sed(struct tracker_s * conn) {
 /// @param rd   size of b2 content.
 void b2server_sed(struct tracker_s * conn, ssize_t rd) {
     if (rd>0) {
-      printf("[+] Caught client -> server packet.\n");
       rd=sed_the_buffer(rd, conn->live, OUT);
       conn->time = now;
       if (write(conn->fsock,b2,rd)<=0) {
@@ -802,19 +787,8 @@ int main(int argc,char* argv[]) {
   if (res == NULL)
     error("Failed in resolving remote host.");
 
-  if (fixedhost.ss_family && fixedport)
-    printf("[+] Using fixed forwarding to %s,%s.\n",rhost,rport);
-  else if (fixedport)
-    printf("[+] Using dynamic (transparent proxy) forwarding with fixed port %s.\n",rport);
-  else if (fixedhost.ss_family)
-    printf("[+] Using dynamic (transparent proxy) forwarding with fixed addr %s.\n",rhost);
-  else
-    printf("[+] Using dynamic (transparent proxy) forwarding.\n");
-
   bind_and_listen(fixedhost.ss_family, tcp, lport);
 
-  printf("[+] Listening on port %s/%s.\n", lport, (tcp)?"tcp":"udp");
-
   signal(SIGPIPE, SIG_IGN);
   struct sigaction sa;
   sa.sa_flags = 0;
@@ -917,7 +891,6 @@ int main(int argc,char* argv[]) {
         int one=1;
         getnameinfo((struct sockaddr *) &s, l, ipstr, sizeof(ipstr),
                     portstr, sizeof(portstr), NI_NUMERICHOST | NI_NUMERICSERV);
-        printf("[+] Got incoming connection from %s,%s", ipstr, portstr);
         conn = malloc(sizeof(struct tracker_s));
         if(NULL == conn) error("netsed: unable to malloc() connection tracker struct");
         // protocol specific init
@@ -950,7 +923,6 @@ int main(int argc,char* argv[]) {
 #endif
         getnameinfo((struct sockaddr *) &s, l, ipstr, sizeof(ipstr),
                     portstr, sizeof(portstr), NI_NUMERICHOST | NI_NUMERICSERV);
-        printf(" to %s,%s\n", ipstr, portstr);
         conpo = get_port((struct sockaddr *) &s);
 
         memcpy(&conho, &s, sizeof(conho));
@@ -964,13 +936,11 @@ int main(int argc,char* argv[]) {
         set_port((struct sockaddr *) &s, conpo);
         getnameinfo((struct sockaddr *) &s, l, ipstr, sizeof(ipstr),
                     portstr, sizeof(portstr), NI_NUMERICHOST | NI_NUMERICSERV);
-        printf("[*] Forwarding connection to %s,%s\n", ipstr, portstr);
 
         // connect will bind with some dynamic addr/port
         conn->fsock = socket(s.ss_family, tcp ? SOCK_STREAM : SOCK_DGRAM, 0);
 
         if (connect(conn->fsock,(struct sockaddr*)&s,l)) {
-           printf("[!] Cannot connect to remote server, dropping connection.\n");
            freetracker(conn);
            conn = NULL;
         } else {
